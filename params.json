{"name":"HackerGym ","tagline":"Code for HackerGym Solutions","body":"## What is this ?\r\n\r\nThis repo contains solutions for coding challenges on http://hackergym.com. \r\n\r\nFor each question, there are multiple solutions available in Java. In addition, all solutions come with extensive unit tests that test for correctness and common pitfalls and edge cases. \r\n\r\nMore importantly, each solution contains placeholders for your own custom solution. You can add your own solutions to these placeholders and all the unit tests will automatically run on it and verify it's correctness. \r\n\r\n\r\n## How to use this ?\r\n\r\nThe best way to use this repo is along with http://hackergym.com. \r\n\r\nWe recommend that you go through each question using the simulated environment on the website. Then, if you have a better solution and want to verify it use this repo to run our unit tests against it. \r\n\r\n\r\n## How to set up\r\n\r\nFirst you need to install JDK 8 from [here](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html). \r\n\r\nAfter the installation do the following to make sure you have the correct version: \r\n\r\n```\r\n$ javac -version\r\n```\r\n\r\nNow download the zip/tar file from top of this page and unzip it. Then follow the instructions below for your favorite java development tool. \r\n\r\n### Command Line\r\n\r\nFrom the extracted folder: \r\n\r\n```\r\n$ cd JavaSolutions/\r\n$ ./gradlew\r\n$ ./gradlew test\r\n\r\n```\r\nThis will run all the unit tests against the code. \r\n\r\nYou can use the ``./gradlew`` to run any task inlcuding build and test.\r\n\r\n### Eclipse\r\n\r\nFirst install Gradle from Eclipse Marketplace: ``Help -> Eclipse MarketPlace`` : \r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/0.gif):\r\n\r\nNow set you project java version to 1.8: ``Project -> Properties`` : \r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/1.gif)\r\n\r\nHaving installed the Gradle plugin, import the project as a Gradle project: ``File -> Import``\r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/2.gif)\r\n\r\nFinally, open the Gradle Task view and run with test: ``Window -> Show View -> Other`` \r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/3.gif)\r\n\r\nThis will run all of the unit tests on the solutions. \r\n\r\n\r\n### IntellijIDEA\r\n\r\nFirst install The Gradle Plugin:``IntelliJ IDEA -> Preferences -> plugins``\r\n \r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/I1.gif)\r\n\r\nNow import the project: ``File -> Import Project`` \r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/I2.gif)\r\n\r\nNow set you JDK to 1.8: ``File -> Project Structure``\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/I3.gif)\r\n\r\nMake sure that ``Project Language level`` is set to 8.0 and also that your ```Project SDK`` is pointing to your JDK 8 installation. \r\n\r\nFinally, Run the Gradle Task window and run the test task: ```view -> Tool Windows -> Gradle```:\r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/I4.gif)\r\n\r\n\r\n##Project Structure\r\n\r\nUnder the ``src`` folder there are two standard folders: \r\n\r\n* \t``src/main/java`` : Contains the actual code for solutions. Each topic has its own package and the name of the classes correspond to the name of the questions on http://hackergym.com\r\n* \t``src/test/java`` : Contains the unit tests for solutions. The name of the packages and classes correspond to the packages and classess under ``src/main/java``\r\n\r\n##How to Add your Custom Solutions\r\n\r\nIf you go under each problem, you will see a section describing the problem and a method as soon as the class begins. The method usually has a big comment block saying \"Your Custom Solution\". All you need to do is to remove the existing line of code in that method and write your own solution there.  \r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/CustomSolution.png)\r\n\r\nOnce you are done, you can run the unit tests against your solution using one of the approaches explained above. \r\n\r\n![image](https://s3-us-west-2.amazonaws.com/hackergym-images/UnitTests.png)\r\n\r\nUnit tests will be run against your custom solution. These unit tests contain the word Custom in them so that they are easy to spot. \r\n\r\n##What's next\r\nHackerGym gets updates every week with a new batch of questions. So check the repo frequently so that you don't miss new questions. \r\n\r\n##Support\r\nIf you have any trouble setting up your environment or see a wrong solution, contact team@hackergym.com or open an issue [here](https://github.com/Fathalian/HackerGymContent/issues). \r\n\r\nIf you have better solutions, want to modify existing solutions, or have a solution in other languages fork the repo and send us a pull request. We will merge your changes as soon as possible. \r\n\r\n##License\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, but not to sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}